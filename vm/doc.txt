/*
mov[b] r0, r1; r1[b] = r0[b]
movi   25, r0; r0    = 25
movze  r0, r1; r1    = zero_ext(r0b)
movse  r0, r1; r1    = sign_ext(r0b)

st[b] r0, r1; mem[b][r1] = r0[b]
ld[b] r0, r1; r1[b]      = mem[b][r0]

add[b] r0, r1; r1[b] = r1[b] + r0[b]
sub[b] r0, r1; r1[b] = r1[b] - r0[b]

cmp[b] r0, r1

jmp flags addr;

flags:
oscz
0000 - 0
0001 - 1 z
0010 - 2 c
0100 - 4 s
1000 - 8 o

msg:
	.stringz "hello, world\n"

_start:
	mov 0, r0
	mov msg, r1
	mov 0, r3

	jmp loop_test
loop:
	inc r3
loop_test:
	add r3, r1
	ldb r1, r2
	cmpb r0, r2
	jne loop

	mov SYS_WRITE, r0
	mov STDOUT, r1
	mov msg, r2
	syscall

	halt
*/
